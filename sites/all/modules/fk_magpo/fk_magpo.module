<?php

/*
 * Implementation of hook_menu().
 */
function fk_magpo_menu() {
  $items = array();
  
  $items['magpo/json'] = array(
    'title' => 'Magnetic Poetry: JSON',
    'page callback' => 'fk_magpo_json',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/*
 * Implementation of hook_form_FORM_ID_alter.
 *
 * @param $form
 *
 * @param $form_state
 *
 * @param $form_id
 * 
 */
function fk_magpo_form_taxonomy_form_vocabulary_alter(&$form, &$form_state, $form_id) {
  // Prevent form from being created when it is confirm screen to delete.
  if (!isset($form['confirm'])) {
    $magpo = variable_get('fk_magpo_vocabularies', array());
    $vid = isset($form['vid']['#value']) ? $form['vid']['#value'] : 0;
    $form['#submit'][] = 'fk_magpo_form_taxonomy_form_vocabulary_submit';
    $form['fk_magpo'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use for Magnetic Poetry.'),
      '#default_value' => isset($magpo[$vid]),
    );
  }
}

/*
 * Custom submit function for 
 *
 * @param $form
 *
 * @param $form_state
 * 
 */
function fk_magpo_form_taxonomy_form_vocabulary_submit(&$form, &$form_state) {
  $magpo = variable_get('fk_magpo_vocabularies', array());
  // If the user deletes the vocabulary, remove it from the variable.
  // Else, add or remove it per the value of the checkbox.
  $value = $form_state['values']['op'] == 'Delete' ? FALSE : $form_state['values']['fk_magpo'];
  $vid = $form_state['values']['vid'];
  $name = $form_state['values']['name'];

  if ($value == FALSE && isset($magpo[$vid])) {
    unset($magpo[$vid]);
  }
  elseif ($value) {
    $magpo[$vid] = $name;
  }
  
  variable_set('fk_magpo_vocabularies', $magpo);  
}

/*
 * Displays all vocabulary terms as a JSON export.
 */
function fk_magpo_json() {
  $vocabs = variable_get('fk_magpo_vocabularies', array());
  
  if (!is_array($vocabs)) {
    $vocabs = array();
    $temp = taxonomy_get_vocabularies();
    foreach($temp as $vid => $obj) {
      $vocabs[$vid] = $obj->name;
    }
  }
  
  $data = array();
  foreach($vocabs as $vid => $name) {
    $words = array();
    $query = db_select('taxonomy_term_data','t')
      ->fields('t', array('tid','name'))
      ->condition('vid', $vid, '=')
      ->orderBy('weight')
      ->execute();
    while ($row = $query->fetchObject()) {
      $words[] = array(
        'vid' => $vid,
        'id' => $row->tid,
        'string' => $row->name,
      );
    }
    
    $data[] = array(
      'id' => $vid,
      'name' => $name,
      'words' => $words,
    );
  } 
    
  drupal_json_output($data);
  drupal_exit();
  
}


function fk_magpo_preprocess_node(&$vars) {
  if (isset($vars['type']) && $vars['type'] == 'poem') {
    $uuid = $vars['field_poem_unique_id']['und'][0]['safe_value'];
    $url = "http://magpo.webchefs.org/magpo/app/load/" . $uuid;
    $return = drupal_http_request($url);
    drupal_add_js(array('fk_magpo' => array('json' => $return->data, 'uuid' => $uuid)), 'setting');
    drupal_add_js(drupal_get_path('module', 'fk_magpo') . '/fk_magpo.js');
    $vars['json_procesed_html'] = fk_magpo_json_process($return->data);
  }
}

function fk_magpo_json_process($json) {
  $object = json_decode($json);
  if(isset($object->status) && $object->status == 'ok') {
    $return = '<div class="fk-magpo-container-error">';
    foreach($object->poem->words as $word) {
      $return .= '<div class="fk-magpo-word fk-magpo-word-vid-' . $word->vid . '">' . $word->string . '</div>';
    }    
    $return .= '</div>';
  } else {
    $return = '<div class="fk-magpo-container-error"></div>';
  };
  return $return;
}
